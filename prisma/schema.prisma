// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email        String         @id @db.VarChar(100)
  name         String         @db.VarChar(20)
  password     String         @db.VarChar(100)
  avatar       String?
  // relation
  addresses    Address[]
  Cart         Cart[]
  Order_detail Order_detail[]

  @@map("users")
}

model Admin {
  email    String @id @db.VarChar(100)
  password String @db.VarChar(100)

  @@map("admin")
}

//  -------- Product -----------

model Product {
  id            Int             @id @default(autoincrement())
  sku           String          @unique @db.VarChar(100)
  name          String          @db.VarChar(100)
  description   String?         @db.Text
  color         String?         @db.VarChar(50)
  size          String          @db.VarChar(2)
  price         Int
  stock         Int             @default(0)
  created_at    DateTime
  updated_at    DateTime
  // relation
  Product_image Product_image[]
  Cart          Cart[]
  Order_detail  Order_detail[]

  @@map("products")
}

model Product_image {
  id          Int     @id @default(autoincrement())
  sku_product String
  link        String
  // relation
  product     Product @relation(fields: [sku_product], references: [sku])

  @@map("product_images")
}

//  -------- User item -----------

model Address {
  id          Int    @id @default(autoincrement())
  user_email  String @db.VarChar(100)
  no_telp     String @db.VarChar(20)
  postal_code String @db.VarChar(11)
  street      String @db.VarChar(100)
  sub_distric String @db.VarChar(100)
  city        String @db.VarChar(100)
  province    String @db.VarChar(100)
  country     String @db.VarChar(100)
  // relation
  user        User   @relation(fields: [user_email], references: [email])

  @@map("addresses")
}

//  -------- Act -----------

model Cart {
  email_user  String  @db.VarChar(100)
  sku_product String
  // relation
  user        User    @relation(fields: [email_user], references: [email])
  product     Product @relation(fields: [sku_product], references: [sku], onDelete: Cascade)

  @@id([email_user, sku_product])
  @@map("carts")
}

model Order_detail {
  id          Int      @id @default(autoincrement())
  id_order    String
  email_user  String   @db.VarChar(100)
  sku_product String
  color       String   @db.VarChar(100)
  size        Int
  price       Int
  quantity    Int
  price_total Int
  time        DateTime
  // relation
  user        User     @relation(fields: [email_user], references: [email])
  product     Product  @relation(fields: [sku_product], references: [sku])

  @@map("order_details")
}
