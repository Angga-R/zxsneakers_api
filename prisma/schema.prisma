// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email     String    @id @db.VarChar(100)
  name      String    @db.VarChar(20)
  password  String    @db.VarChar(100)
  avatar    String?
  // relation
  addresses Address[]
  Cart      Cart[]
  Order     Order[]

  @@map("users")
}

model Admin {
  email    String @id @db.VarChar(100)
  password String @db.VarChar(100)

  @@map("admin")
}

//  -------- Product -----------

model Product {
  id            Int             @id @default(autoincrement())
  sku           String          @unique @db.VarChar(100)
  name          String          @db.VarChar(100)
  description   String?         @db.Text
  color         String?         @db.VarChar(50)
  size          String          @db.VarChar(2)
  price         Int
  stock         Int             @default(0)
  created_at    DateTime
  updated_at    DateTime
  // relation
  Product_image Product_image[]
  Cart          Cart[]
  Order_detail  Order_detail[]

  @@map("products")
}

model Product_image {
  id         Int     @id @default(autoincrement())
  product_id Int
  link       String
  // relation
  product    Product @relation(fields: [product_id], references: [id])

  @@map("product_images")
}

//  -------- User item -----------

model Address {
  id          Int    @id @default(autoincrement())
  user_email  String @db.VarChar(100)
  no_telp     String @db.VarChar(20)
  postal_code String @db.VarChar(11)
  street      String @db.VarChar(100)
  sub_distric String @db.VarChar(100)
  city        String @db.VarChar(100)
  province    String @db.VarChar(100)
  country     String @db.VarChar(100)
  // relation
  user        User   @relation(fields: [user_email], references: [email])

  @@map("addresses")
}

//  -------- Cart -----------

model Cart {
  user_email String  @db.VarChar(100)
  product_id Int
  // relation
  user       User    @relation(fields: [user_email], references: [email])
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([user_email, product_id])
  @@map("carts")
}

//  -------- Order -----------

model Order {
  id          String   @id
  user_email  String
  price_total Int
  created_at  DateTime

  user         User           @relation(fields: [user_email], references: [email])
  Order_detail Order_detail[]

  @@map("orders")
}

model Order_detail {
  id         Int      @id @default(autoincrement())
  order_id   String
  product_id Int?
  price_item Int
  quantity   Int
  discount   Int?
  subtotal   Int
  created_at DateTime
  // relation
  order      Order    @relation(fields: [order_id], references: [id])
  product    Product? @relation(fields: [product_id], references: [id], onDelete: SetNull)

  @@map("order_details")
}
