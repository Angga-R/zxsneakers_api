// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email         String         @id @db.VarChar(100)
  name          String         @db.VarChar(20)
  password      String         @db.VarChar(100)
  // relation
  addresses     Address[]
  Profile_image Profile_image?
  Wishlist      Wishlist[]
  Buy           Buy[]

  @@map("users")
}

model Admin {
  email    String @id @db.VarChar(100)
  password String @db.VarChar(100)

  @@map("admin")
}

model Product {
  id            Int             @id @default(autoincrement())
  sku           String          @unique @db.VarChar(100)
  name          String          @db.VarChar(100)
  price         Int
  stock         Int
  created_at    DateTime
  updated_at    DateTime
  // relation
  Product_size  Product_size[]
  Product_color Product_color[]
  Product_image Product_image[]
  Wishlist      Wishlist[]
  Buy           Buy[]

  @@map("products")
}

//  -------- User item -----------

model Address {
  id          Int    @id @default(autoincrement())
  user_email  String @db.VarChar(100)
  no_telp     String @db.VarChar(20)
  postal_code Int
  street      String @db.VarChar(100)
  sub_distric String @db.VarChar(100)
  city        String @db.VarChar(100)
  province    String @db.VarChar(100)
  country     String @db.VarChar(100)
  // relation
  user        User   @relation(fields: [user_email], references: [email])

  @@map("addresses")
}

model Profile_image {
  user_email String @unique @db.VarChar(100)
  name       String @db.VarChar(255)
  format     String @db.VarChar(100)
  data_image Bytes
  // relation
  user       User   @relation(fields: [user_email], references: [email])

  @@map("user_profile_image")
}

//  -------- Product item -----------

model Product_size {
  id         Int     @id @default(autoincrement())
  id_product Int
  size       Int
  // relation
  product    Product @relation(fields: [id_product], references: [id])

  @@map("product_sizes")
}

model Product_color {
  id         Int     @id @default(autoincrement())
  id_product Int
  color      String  @db.VarChar(20)
  // relation
  product    Product @relation(fields: [id_product], references: [id])

  @@map("product_colors")
}

model Product_image {
  id         Int     @id @default(autoincrement())
  id_product Int
  name       String  @db.VarChar(100)
  format     String  @db.VarChar(4)
  data_image Bytes
  // relation
  product    Product @relation(fields: [id_product], references: [id])

  @@map("product_images")
}

//  -------- Act -----------

model Wishlist {
  email_user String  @db.VarChar(100)
  id_product Int
  // relation
  user       User    @relation(fields: [email_user], references: [email])
  product    Product @relation(fields: [id_product], references: [id])

  @@id([email_user, id_product])
  @@map("wishlistes")
}

model Buy {
  id_product  Int
  email_user  String   @db.VarChar(100)
  quantity    Int
  price_total Int
  id          Int
  buying_time DateTime
  // relation
  product     Product  @relation(fields: [id_product], references: [id])
  user        User     @relation(fields: [email_user], references: [email])

  @@id([id_product, email_user])
  @@map("buy")
}
